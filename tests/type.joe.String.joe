// String type tests

function testCharAt() {
    check("abc".charAt(0)).eq("a");
    check("abc".charAt(2)).eq("c");
    check("abc".charAt(2.9)).eq("c");

    function bad1() { "abc".charAt(-1); }
    function bad2() { "abc".charAt(3); }
    checkCatch(bad1).message("Expected 0 <= index < 3, got: Number '-1'.");
    checkCatch(bad2).message("Expected 0 <= index < 3, got: Number '3'.");
}

function testContains() {
    check("abcdef".contains("bcd")).isTrue();
    check("abcdef".contains("123")).isFalse();
}

function testEndsWith() {
    check("abcdef".endsWith("def")).isTrue();
    check("abcdef".endsWith("cde")).isFalse();
}

function testEqualsIgnoreCase() {
    check("abc".equalsIgnoreCase("ABC")).isTrue();
    check("abc".equalsIgnoreCase("ABCD")).isFalse();
}

function testIndent() {
    check("abc".indent(2)).eq("  abc");
}

function testIndexOf() {
    check("abcdefghi".indexOf("xyz")).eq(-1);
    check("abcdefghi".indexOf("def")).eq(3);

    check("abcabcabc".indexOf("bc", 2)).eq(4);
    check("abcdeabcde".indexOf("c", 3, 6)).eq(-1);
}

function testIsBlank() {
    check("abc".isBlank()).isFalse();
    check("   ".isBlank()).isTrue();
    check("".isBlank()).isTrue();
}

function testIsEmpty() {
    check("abc".isEmpty()).isFalse();
    check("   ".isEmpty()).isFalse();
    check("".isEmpty()).isTrue();
}

function testJoin() {
    check(String.join(",", [])).eq("");
    check(String.join(",", ["a", "b"])).eq("a,b");
    check(String.join(",", [1, 2])).eq("1,2");
}

function testLastIndexOf() {
    check("abcdefghi".lastIndexOf("xyz")).eq(-1);
    check("abcabc".lastIndexOf("b")).eq(4);

    check("abcabc".lastIndexOf("b", 3)).eq(1);
}

function testLength() {
    check("abc".length()).eq(3);
}

function testLines() {
    check(" abc ".lines())
        .eq([" abc "]);
    check(" abc \n def ".lines())
        .eq([" abc ", " def "]);
}

function testMatches() {
    check("abc".matches("[a-z]+")).isTrue();
    check("123".matches("[a-z]+")).isFalse();
}

function testRepeat() {
    check("abc".repeat(0)).eq("");
    check("abc".repeat(1)).eq("abc");
    check("abc".repeat(2)).eq("abcabc");

    function bad() { "abc".repeat(-1); }

    checkCatch(bad)
        .message("Expected non-negative count, got: Number '-1'.");
}

function testReplace() {
    check("One cow, two cow.".replace("cow", "pig"))
        .eq("One pig, two pig.");
}

function testReplaceAll() {
    check("One cow, two cow.".replaceAll("[aeiou]", "*"))
        .eq("On* c*w, tw* c*w.");
}

function testReplaceFirst() {
    check("One cow, two cow.".replaceFirst("[aeiou]", "*"))
        .eq("On* cow, two cow.");
}

function testSplit() {
    check("abc,def,ghi".split(","))
    .eq(["abc", "def", "ghi"]);
}

function testSplitWithDelimiters() {
    check("abc,def,ghi".splitWithDelimiters(","))
    .eq(["abc", ",", "def", ",", "ghi"]);
}

function testStartsWith() {
    check("abcdef".startsWith("abc")).isTrue();
    check("abcdef".startsWith("bcd")).isFalse();
}

function testStrip() {
    check("  abc  ".strip()).eq("abc");
}

function testStripIndent() {
    check("   abc".stripIndent()).eq("abc");
}

function testStripLeading() {
    check("  abc  ".stripLeading()).eq("abc  ");
}

function testStripTrailing() {
    check("  abc  ".stripTrailing()).eq("  abc");
}

function testSubstring() {
    var txt = "abcdefghi";
    check(txt.substring(3)).eq("defghi");
    check(txt.substring(3, 6)).eq("def");
}

function testToLowerCase() {
    check("ABC".toUpperCase()).eq("abc");
}

function testToLowerCase() {
    check("AbC".toString()).eq("AbC");
}

function testToUpperCase() {
    check("abc".toUpperCase()).eq("ABC");
}
