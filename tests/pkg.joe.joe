// Tests for joe package functions

//-----------------------------------------------------------------------------
// catch()

function testCatch_ok() {
    var tuple = catch(\-> true);
    check(tuple.has(#ok, true));
}

function testCatch_error() {
    function bad() { throw "Simulated error!"; }
    var tuple = catch(bad);
    check(tuple.is(#error));
    check(tuple.error.traces()).eq(List(
        "In function bad()",
        "In java call(<function bad()>)",
        "Called from catch()"
    ));
}

//-----------------------------------------------------------------------------
// compare()

function testCompare_string() {
    check(compare("a", "b")).eq(-1);
    check(compare("b", "b")).eq(0);
    check(compare("c", "b")).eq(1);
}

function testCompare_number() {
    check(compare(0, 1)).eq(-1);
    check(compare(1, 1)).eq(0);
    check(compare(2, 1)).eq(1);
}

function testCompare_mismatch() {
    checkCatch(\-> compare(1, #a))
        .message("Expected two strings or two numbers.");
}

//-----------------------------------------------------------------------------
// typeName()

function testTypeName() {
    function howdy() {}
    class Thing {}
    var thing = Thing();

    check(typeName(1)).eq("Number");
    check(typeName("abc")).eq("String");
    check(typeName(thing)).eq("Thing");
    check(typeName(howdy)).eq("<function>");
    check(typeName(Thing)).eq("<class>");
    check(typeName(typeName)).eq("<native function>");
    check(typeName(String)).eq("<native type>");
}

