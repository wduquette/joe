// List type tests

//-----------------------------------------------------------------------------
// add()

function testAdd_simple() {
    var list = List();
    check(list.add(1)).eq(List(1));
    check(list.add(2)).eq(List(1, 2));
    check(list.add(3)).eq(List(1, 2, 3));
}

function testAdd_index() {
    var list = List();
    check(list.add(1)).eq(List(1));
    check(list.add(0, 2)).eq(List(2, 1));
    check(list.add(1, 3)).eq(List(2, 3, 1));

    checkCatch(\-> list.add(-1, 4))
        .message("Expected 0 <= index < 4, got: Number '-1'.");
}

//-----------------------------------------------------------------------------
// addAll()

function testAddAll_simple() {
    var list = List(1, 2);
    check(list.addAll(List(3, 4, 5))).eq(List(1, 2, 3, 4, 5));

    checkCatch(\-> list.addAll(6))
        .message("Expected List, got: Number '6'.");
}

function testAddAll_index() {
    var list = List(1, 5);
    check(list.addAll(1, List(2, 3, 4))).eq(List(1, 2, 3, 4, 5));

    checkCatch(\-> list.addAll(-1, List()))
        .message("Expected 0 <= index < 6, got: Number '-1'.");
}

//-----------------------------------------------------------------------------
// clear()

function testClear() {
    var list = List(1, 2, 3);
    check(list.clear()).eq(List());
}

//-----------------------------------------------------------------------------
// contains()

function testContains() {
    var list = List(1, 2, 3);
    check(list.contains(2)).eq(true);
    check(list.contains(4)).eq(false);
}

//-----------------------------------------------------------------------------
// containsAll()

function testContainsAll() {
    var list = List(1, 2, 3);
    check(list.containsAll(List(2, 3))).eq(true);
    check(list.containsAll(List(4))).eq(false);
}

//-----------------------------------------------------------------------------
// copy()

function testCopy() {
    var a = List(1, 2, 3);
    var b = a.copy();
    a.clear();
    check(a.size()).eq(0);
    check(b).eq(List(1, 2, 3));
}

//-----------------------------------------------------------------------------
// filter()

function testFilter() {
    var list = List(1, 2, 3, 4, 5);
    check(list.filter(\item -> true)).eq(list);
    check(list.filter(\item -> item > 3)).eq(List(4, 5));
    check(list.filter(\item -> item == "a")).eq(List());
}

//-----------------------------------------------------------------------------
// testGet()

function testGet() {
    var list = List(1, 2, 3);
    check(list.get(0)).eq(1);
    check(list.get(2)).eq(3);

    checkCatch(\-> list.get(4))
        .message("Expected 0 <= index < 3, got: Number '4'.");
}

//-----------------------------------------------------------------------------
// testGetFirst()

function testGetFirst() {
    var list = List(1, 2, 3);
    check(list.getFirst()).eq(1);

    checkCatch(\-> List().getFirst())
        .message("List is empty.");
}

//-----------------------------------------------------------------------------
// testGetLast()

function testGetLast() {
    var list = List(1, 2, 3);
    check(list.getLast()).eq(3);

    checkCatch(\-> List().getLast())
        .message("List is empty.");
}

//-----------------------------------------------------------------------------
// indexOf()

function testIndexOf() {
    var list = List(1, 2, 3, 2, 1);
    check(list.indexOf(2)).eq(1);
    check(list.indexOf(4)).eq(-1);
}

//-----------------------------------------------------------------------------
// isEmpty()

function testIsEmpty() {
    check(List(1).isEmpty()).eq(false);
    check(List().isEmpty()).eq(true);
}

//-----------------------------------------------------------------------------
// lastIndexOf()

function testLastIndexOf() {
    var list = List(1, 2, 3, 2, 1);
    check(list.lastIndexOf(2)).eq(3);
    check(list.lastIndexOf(4)).eq(-1);
}

//-----------------------------------------------------------------------------
// map()

function testMap() {
    var list = List(1, 2, 3);
    check(list.map(\x -> 2*x)).eq(List(2, 4, 6));
}

//-----------------------------------------------------------------------------
// testPeekFirst()

function testPeekFirst() {
    var list = List(1, 2, 3);
    check(list.peekFirst()).eq(1);
    check(List().peekFirst()).eq(null);
}

//-----------------------------------------------------------------------------
// testPeekLast()

function testPeekLast() {
    var list = List(1, 2, 3);
    check(list.peekLast()).eq(3);
    check(List().peekLast()).eq(null);
}

//-----------------------------------------------------------------------------
// testRemove()

function testRemove() {
    var list = List(1, 2, 3);
    check(list.remove(2)).eq(true);
    check(list).eq(List(1, 3));

    check(list.remove(2)).eq(false);
}

//-----------------------------------------------------------------------------
// testRemoveAll()

function testRemoveAll() {
    var list = List(1, 2, 3);
    check(list.removeAll(List(2))).eq(true);
    check(list).eq(List(1, 3));

    check(list.removeAll(List(4))).eq(false);
}

//-----------------------------------------------------------------------------
// testRemoveAt()

function testRemoveAt() {
    var list = List(1, 2, 3);
    check(list.removeAt(1)).eq(2);
    check(list).eq(List(1, 3));

    checkCatch(\-> list.removeAt(-1))
        .message("Expected 0 <= index < 2, got: Number '-1'.");
}

//-----------------------------------------------------------------------------
// testRemoveFirst()

function testRemoveFirst() {
    var list = List(1, 2, 3);
    check(list.removeFirst()).eq(1);

    checkCatch(\-> List().removeFirst())
        .message("List is empty.");
}

//-----------------------------------------------------------------------------
// testRemoveLast()

function testRemoveLast() {
    var list = List(1, 2, 3);
    check(list.removeLast()).eq(3);

    checkCatch(\-> List().removeLast())
        .message("List is empty.");
}

//-----------------------------------------------------------------------------
// reversed()

function testReversed() {
    var list = List(1, 2, 3);
    check(list.reversed()).eq(List(3, 2, 1));
}

//-----------------------------------------------------------------------------
// set()

function testSet() {
    var list = List(1, 2, 3);
    check(list.set(1, "x")).eq(2);
    check(list).eq(List(1, "x", 3));
}

//-----------------------------------------------------------------------------
// size()

function testSize() {
    check(List().size()).eq(0);
    check(List(1,2,3).size()).eq(3);
}

//-----------------------------------------------------------------------------
// sorted()

function testSorted_goodNoComp() {
    var list = List(5, 4, 3, 2, 1);
    check(list.sorted()).eq(List(1, 2, 3, 4, 5));

    var list2 = List("e", "d", "c", "b", "a");
    check(list2.sorted()).eq(List("a", "b", "c", "d", "e"));
}

function testSorted_goodComp() {
    var list = List(5, 4, 3, 2, 1);
    check(list.sorted(compare)).eq(List(1, 2, 3, 4, 5));

    var list2 = List("e", "d", "c", "b", "a");
    check(list2.sorted(compare)).eq(List("a", "b", "c", "d", "e"));
}

function testSorted_descending() {
    var list = List(1,2,3,4,5);
    check(list.sorted(\a,b -> -compare(a,b))).eq(List(5,4,3,2,1));
}

function testSorted_mismatch() {
    var list = List(5, "d", 3, "b", 1);
    checkCatch(\-> list.sorted())
        .message("Expected two strings or two numbers.");
}

function testSorted_badComp() {
    var list = List(5, 4, 3, 2, 1);
    checkCatch(\-> list.sorted(\a,b -> "abc"))
        .message("Expected number, got: String '\"abc\"'.");
}


//-----------------------------------------------------------------------------
// sublist()

function testSublist() {
    var list = List(1, 2, 3, 4, 5);
    check(list.sublist(1)).eq(List(2, 3, 4, 5));
    check(list.sublist(1, 3)).eq(List(2, 3));
}

