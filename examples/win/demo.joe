// win_demo.joe: testing `joe win`
Win.setTitle("joe win: Demo")
   .setSize(600, 400)
   ;

// The Page class
class Page extends VBox {
    method init(name) { .name = name; }
    method toString() { return .name; }
}

// GridPanePage
class GridPanePage extends Page {
    method init() {
        super.init("GridPane");
        this.child(GridPane().hgap(5).vgap(5)
            .at(0, 1, Label("Row 1"))
            .at(0, 2, Label("Row 2"))
            .at(1, 0, Label("Column 1"))
            .at(2, 0, Label("Column 2"))
            .at(1, 1, Label("Alice Aardvark"))
            .at(2, 1, Label("Alice Badger"))
            .at(1, 2, Label("Bob Aardvark"))
            .at(2, 2, Label("Bob Badger"))
        );
    }
}

// Define components
var pageList = ListView();
var pagePane = StackPane();

var pages = [
    GridPanePage()
];

//-----------------------------------------------------------------------------
// Logic

function showSelectedPage(pageList) {
    println("In showSelectedPage: " + pageList.getSelectedItem());
    pagePane.children().clear();
    var selected = pageList.getSelectedItem();
    selected != null && pagePane.child(selected);
}

//-----------------------------------------------------------------------------
// Build and display the GUI

Win.root()
    .spacing(5)
    .child(MenuBar()
        .menu(Menu().text("File")
            .item(MenuItem().text("Exit")
                .action(\-> Console.exit())
            )
        )
    )
    .child(SplitPane().vgrow().horizontal()
        .item(pageList
            .resizeWithSplit(false)
            .prefWidth(200)
            .items(pages)
            .onSelect(showSelectedPage)
        )
        .item(pagePane.padding(10))
        .setDivider(0, 0.3)
    )
    ;

